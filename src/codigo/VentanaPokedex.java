/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codigo;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/**
 *
 * @author xp
 */
public class VentanaPokedex extends javax.swing.JFrame {

    BufferedImage buffer1 = null;
    Image imagen1 = null;
    int contador = 1;

    Statement estado;
    ResultSet resultadoConsulta;
    Connection conexion;
    
    //Estructura para guardar todo el contenido de la base de datos de golpe y reutilizarla(dejo de depender la base de datos)
    HashMap<String, Pokemon> listaPokemons = new HashMap();
    
//Sobreescribir el metodo paint
    @Override
    public void paint(Graphics g) { //override sobreescribe el metodo paint, y le digo que quiero que dibuje 
        super.paintComponents(g);
        Graphics2D g2 = (Graphics2D) imagenPokemon.getGraphics();
        g2.drawImage(buffer1, 0, 0, imagenPokemon.getWidth(), imagenPokemon.getHeight(), null);

    }

    /**
     * Creates new form VentanaPokedex
     */
    public VentanaPokedex() {
        initComponents();
        try {
            imagen1 = ImageIO.read((getClass().getResource("/imagenes/black-white.png")));
        } catch (IOException ex) {
        }

        buffer1 = (BufferedImage) imagenPokemon.createImage(imagenPokemon.getWidth(), imagenPokemon.getHeight());

        Graphics2D g2 = buffer1.createGraphics();

        dibujaElPokemonQueEstaEnLaPosicion(0);
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            conexion = DriverManager.getConnection("jdbc:mysql://192.168.138.140/test", "root", "");
            estado = conexion.createStatement();
            resultadoConsulta =  estado.executeQuery("Select * from pokemon");
            //Se recorre el array del resultado uno a uno para ir carg√°ndolo en el Hashmap
            
            while (resultadoConsulta.next()){
                Pokemon p = new Pokemon();
                p.nombre = resultadoConsulta.getString("nombre");
                p.movimiento1 = resultadoConsulta.getString("movimiento1");
                p.especie = resultadoConsulta.getString("especie");
                p.peso = resultadoConsulta.getString("peso");
                p.posEvolucion = resultadoConsulta.getInt("posEvolucion");
                p.preEvolucion = resultadoConsulta.getInt("preEvolucion");
                
                listaPokemons.put(resultadoConsulta.getString("id"), p);
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());
            System.out.println("ERROR");
        }
    }

    private void dibujaElPokemonQueEstaEnLaPosicion(int posicion) {
        int fila = posicion / 31;
        int columna = posicion % 31;
        Graphics2D g2 = (Graphics2D) buffer1.getGraphics();
        g2.setColor(Color.white);
        g2.fillRect(0, 0, imagenPokemon.getWidth(), imagenPokemon.getHeight()); //Pinta el fondo del jPanel negro
        //(posicion x inicial dentro del jpanel, posicion y dentro del jPanel, ancho del jpanel, alto del jpanel, posicion x dento de la imagen del pokemon, posicion y dentro de la imagen del pokemon, posicion final x, posicion final y), 
        g2.drawImage(imagen1, 0, 0, imagenPokemon.getWidth(), imagenPokemon.getHeight(), columna * 96, fila * 96, columna * 96 + 96, fila * 96 + 96, null);
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagenPokemon = new javax.swing.JPanel();
        BotonIzq = new javax.swing.JButton();
        BotonDer = new javax.swing.JButton();
        nombrePokemon = new javax.swing.JLabel();
        Fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        imagenPokemon.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout imagenPokemonLayout = new javax.swing.GroupLayout(imagenPokemon);
        imagenPokemon.setLayout(imagenPokemonLayout);
        imagenPokemonLayout.setHorizontalGroup(
            imagenPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        imagenPokemonLayout.setVerticalGroup(
            imagenPokemonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        getContentPane().add(imagenPokemon, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 200, 200));

        BotonIzq.setContentAreaFilled(false);
        BotonIzq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonIzqActionPerformed(evt);
            }
        });
        getContentPane().add(BotonIzq, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 490, 50, 50));
        BotonIzq.getAccessibleContext().setAccessibleDescription("Izquierda");

        BotonDer.setBorderPainted(false);
        BotonDer.setContentAreaFilled(false);
        BotonDer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonDerActionPerformed(evt);
            }
        });
        getContentPane().add(BotonDer, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 490, 50, 50));
        BotonDer.getAccessibleContext().setAccessibleDescription("");

        getContentPane().add(nombrePokemon, new org.netbeans.lib.awtextra.AbsoluteConstraints(673, 184, 176, 46));

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pokedex.jpg"))); // NOI18N
        Fondo.setInheritsPopupMenu(false);
        getContentPane().add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonDerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonDerActionPerformed

        contador++;

        if (contador >= 649) {
            contador = 649;
        }
        dibujaElPokemonQueEstaEnLaPosicion(contador-1);

        Pokemon p = listaPokemons.get(String.valueOf(contador));
        if (p!=null){
            nombrePokemon.setText(p.nombre);
        }else{
            nombrePokemon.setText("No hay datos");
        }

    }//GEN-LAST:event_BotonDerActionPerformed

    private void BotonIzqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonIzqActionPerformed

        contador--;

        if (contador <= 0) {
            contador = 0;
        }

        dibujaElPokemonQueEstaEnLaPosicion(contador-1);
        Pokemon p = listaPokemons.get(String.valueOf(contador));//Evito error debido a que no hay pokemon 0
        if (p!=null){
            nombrePokemon.setText(p.nombre);
        }else{
            nombrePokemon.setText("No hay datos");
        }

    }//GEN-LAST:event_BotonIzqActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPokedex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonDer;
    private javax.swing.JButton BotonIzq;
    private javax.swing.JLabel Fondo;
    private javax.swing.JPanel imagenPokemon;
    private javax.swing.JLabel nombrePokemon;
    // End of variables declaration//GEN-END:variables
}
